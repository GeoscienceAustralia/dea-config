name: OWS CFG Lint Check

on:
  push:
    path:
      - 'dev/services/wms/**'
      - .github/workflows/ows_linting.yaml
    pull_request:
      branches: [ master ]
      paths:
        - 'dev/services/wms/**'
        - .github/workflows/ows_linting.yaml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Run Python Linter
      run: |
        python -m pip install pylint boto3
        ./check-code.sh

  # flake8:
  #   name: flake8
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: grantmcconnaughey/lintly-flake8-github-action@v1.0
  #       with:
  #         # The GitHub API token to create reviews with
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         # Fail if "new" violations detected or "any", default "new"
  #         failIf: new
  #         # Additional arguments to pass to flake8, default "." (current directory)
  #         args: "--ignore=E121,E123,E501 ./dev/services/wms/ows_refactored/"

  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: python -m pip install flake8
      - name: flake8
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: flake8
          run: flake8

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: python -m pip install isort
      - name: isort
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: isort
          run: isort --check --diff django tests scripts